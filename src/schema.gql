# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Villager {
  id: Float!
  createAt: DateTime!
  image: String
  species: String
  name: String!
  personality: String
  gender: String
  birth: String
  speak: String
  speakType: String
  hobby: String
  music: String
  style: String
  style2: String
  color: String
  color2: String
  favoriteTalk: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type VillagerComment {
  id: Float!
  createAt: DateTime!
  content: String!
  villagerId: Float!
  user: User
}

type Creature {
  name: String!
}

type User {
  id: Float!
  createAt: DateTime!
  name: String!
  email: String!
  password: String!
  userImage: String
  islandName: String
  islandCode: String
  verified: Boolean!
  lastLogin: DateTime!
  creatures: [Creature!]!
}

type CreateAccountOutput {
  error: String
  ok: Boolean!
}

type LoginOutput {
  error: String
  ok: Boolean!
  token: String
}

type EditProfileOutput {
  error: String
  ok: Boolean!
}

type VerifyEmailOutput {
  error: String
  ok: Boolean!
}

type VillagerCommentsOutput {
  error: String
  ok: Boolean!
  comments: [VillagerComment!]
}

type DeleteVillagerCommentOutput {
  error: String
  ok: Boolean!
}

type VillagersOutput {
  error: String
  ok: Boolean!
  villagers: [Villager!]
  species: [String!]
  personalities: [String!]
}

type VillagersFilterOutput {
  error: String
  ok: Boolean!
  species: [String!]
  personalities: [String!]
}

type CreateVillagersOutput {
  error: String
  ok: Boolean!
}

type UserCreatureOutput {
  error: String
  ok: Boolean!
  creatures: [Creature!]
}

type CreateCreatureOutput {
  error: String
  ok: Boolean!
}

type DeleteCreatureOutput {
  error: String
  ok: Boolean!
}

type Query {
  me: User!
  villagers(input: VillagersInput!): VillagersOutput!
  villagersFilter: VillagersFilterOutput!
  villagersComments(input: VillagerCommentsInput!): VillagerCommentsOutput!
  userCreatures: UserCreatureOutput!
}

input VillagersInput {
  species: String
  name: String
  personality: String
}

input VillagerCommentsInput {
  villagerId: Float!
  page: Float!
}

type Mutation {
  createAccount(input: CreateAccountInput!): CreateAccountOutput!
  editProfile(input: EditProfileInput!): EditProfileOutput!
  login(input: LoginInput!): LoginOutput!
  verifyEmail(input: VerifyEmailInput!): VerifyEmailOutput!
  createVillagers(input: CreateVillagersInput!): CreateVillagersOutput!
  createVillagerComment(input: CreateVillagerCommentInput!): CreateVillagersOutput!
  deleteVillagerComment(input: DeleteVillagerCommentInput!): DeleteVillagerCommentOutput!
  createCreatureRelation(input: CreateCreatureInput!): CreateCreatureOutput!
  deleteCreatureRelation(input: DeleteCreatureInput!): DeleteCreatureOutput!
}

input CreateAccountInput {
  name: String!
  email: String!
  password: String!
  islandName: String
  islandCode: String
}

input EditProfileInput {
  name: String
  email: String
  password: String
  userImage: String
}

input LoginInput {
  email: String!
  password: String!
}

input VerifyEmailInput {
  code: String!
}

input CreateVillagersInput {
  image: String
  species: String
  name: String!
  personality: String
  gender: String
  birth: String
  speak: String
  speakType: String
  hobby: String
  music: String
  style: String
  style2: String
  color: String
  color2: String
  favoriteTalk: String
}

input CreateVillagerCommentInput {
  content: String!
  villagerId: Float!
}

input DeleteVillagerCommentInput {
  id: Float!
}

input CreateCreatureInput {
  name: String!
}

input DeleteCreatureInput {
  name: String!
}